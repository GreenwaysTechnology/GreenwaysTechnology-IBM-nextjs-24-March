					Next js


Software Req:

1.Node.js
2.VSCODE
3.Docker

PreKnowledge:

1.Javascript
2.React fundamentals

What you are going to learn?

1.Next js
2.REST api developement
3.Database Programming Using Prisma ORM Framework
4.GraphQl with Apollo Framework
5.Connecting Graphql with Apollo Framework

.......................................................................................................
					Next js
.......................................................................................................

What is a Next?
	 Next is a flexible React framework that gives you building blocks to create fast "web applications".

What is React?
         React is javascript lib to build "Single Page Web applications"


What is web app?
  Type of distributed app,deployed at server , accessed over network(internet) vi various network protocals like http,tcp,smtp...
  
  Web apps works based on request and response model.
  Web apps are hosted on server called web server.

Web server receives request , runs a program, that program returns response to the client.

Response would be document.
=>HTML

other responses types
XML,JSON,Documents,images,vidoes.........

What is web and why it was created?

  Tim Berners-Lee, a British scientist, invented the World Wide Web (WWW) in 1989, while working at CERN. The web was originally conceived and developed to meet the demand for automated information-sharing between scientists in universities and institutes around the world.

The first Web browser is line mode web browser,launched in 1992.


The first web server is NeXT computer

The first web page , lanuched http://info.cern.ch/hypertext/WWW/TheProject.html.


Types of Web application:

1.Static web applications - 1989 to 1995
    Hard coded html pages, Prepared html pages kept at server, the web server will send those html pages to clients - browsers
   Do you think Static web applications still exits?

 Yes!, but we dont prepare the html pages by hand.. rather we ask the server to prepare..



2.Dynamic Content generation application(1996 to till date)

  After 1995, many people thought that how we can use web for biz information system

 how to share biz informations via internet.
 Generally biz data is stored in databases , how to embed data base data into html pages

 1.web server need to talk to database
 2.web server need to prepare html pages based on database records
 3.Those information must be transported to web clients.

Web server core design to get client request and send html response to the client.

Along with web server, something was introduced called "Programming language runtime"


3.Web services-1998 to till date

 Rise of ECommerce, using internet and web how to exchange data between two biz organizations.
 The existing html technology was not suitable to send and recive data because html is just user interface document language.

 We need , data to be exechanged, thats where new data model was created called 'XML'
xml based web apps called web services.

soap protocal was created to transfer XML based documents "SOAP based webservices"

After 2005 soap based web services, started failing due to mobile computing.

New Web services  were designed called "RestFull Web services"

Restfull web services were used to build any type of data formats like json,xml,pdf,html etc...

The first run time was created based on "c" language called "CGI-comman Gate way interface" later instead of c language "PERL" language.


4.Client side web apps called "Single Page Web Apps"(2007 to till date)

Single page web apps are built using javascript at client side where as server side web services(REST apis) are used.

SPA Tech stack:
HTML 5,CSS 3, Javascript.
Frameworks build based on SPA

1.Angular js
2.react
3.vue js
............................................................................................
				React as SPA lib
............................................................................................

Reactjs was created by facebook , in order to build SPA applications for browsers.


Advantages of SPA:
1.Pages are created  at client side, so server load is completly removed
2.SPA reduces the lot of phsyical pages after deployment.
3.Clear separations of concerns.

Drawbacks of SPA:
.................

Pure client SPAs are problematic when the app is senstive to SEO and time-to concept
This is because the browser will recive a large empty HTML page and has to wait until the javascript is loaded before rendering any thing.

	    The brith of new Technology called  "SSR" -  Server Side Rendering
    ..................................................................................

I need SEO but at the same time, i want to use SPA as well.
We provides first class api to "render"  an SPA app into HTML strings on the server.

This allows server to send back already rendered HTML, allowing end users to see the content immediately while the javascript is being downloaded.

This process is called "hydration", the app is compiled at server side and sent to the client which will be  interactive.
............................................................................................
				Rendering Types
............................................................................................

What is Rendering?
   Render means preparation,HTML Page prepartion...

Rendering Types:
1.CSR- Client side Rendering.
   HTML Pages are prepared at client side - SPA Applications
2.SSR  -Server Side rendering
   HTML Pages are prepared at server side - Dynamic Content Generation applications.

Based on these rendering type, we can classify other rendering

1.Universal rendering /Hybrid Rendering
  Server + Client side , coimbing both rendering 

2.Full SSR and Partial SSR
    Partial SSR is nothing but only "index.html" is compiled at server , rest of the application is rendered at client side.
   Full SSR is nothing but "index.html" and other pages are compiled at server....
.............................................................................................
			When Rendering can happen
		     (when html pages are parepared)
.............................................................................................

1.Request time
2.Build time

1.Request time :
 When user types url 

  http://www.example.com/product--------------->Server Receives Request----Prepares Page--send   that page to client.

2.Build time
    Build is nothing but, preparing app for production.. before hosting we have to prepare the     app
  During build phase, we can prepare html pages/render html pages 

			SSG -  Static Site Generations

Building web sites/apps during build phase is called SSG.

Why SSG?
  Super fast page access

Based On SSG , There is specfication is available "JAM Stack"
...........................................................................................
			Drawback of SSG(JAMStack App)
..........................................................................................
If page has data, which is keep on changing, preparing a page "ahead of time", that causes problem. that means we cant generate page on demand...

Data changes rapidly , we need to enable request time page prepartion.
.............................................................................................
			ISR - Incremental Static Rendenering
...........................................................................................

SSG - Build time or ahead of time
SSR - Request time

ISR = SSG + SSR - Build time + request time 
.............................................................................................

What is Nextjs?

  Next js is a framework that helps to build web apps of all types

 you can build Full SSR apps..
 you can build SSR With Request time
 you can build SSG with Build time -  JAMStacks
 you can build SSR with CSR  - Server + SPA - Hyberid rendering
 you can build rest apis also - Web services
 

Using Next you can build 
 Pure server side apps with database access, other external api access.....
..............................................................................................
		               Next js UI layer
.............................................................................................

Next js uses "react core features" to build UI layer...

React core features:
1.React compoent driven
2.React uses data mutation techniques like props and state
3.React uses event listeners for interactions
4.React hooks

Nextjs tech stack:

1.React as ui layer
2.Next does not recommend to use "redux"
3.Next uses api layer- rest api development
4.Next can talk to any database via orm frameworks...
..............................................................................................
			Next js Architecture:
.............................................................................................

Next js uses "Rust based build system" where as react uses web pack build ....

What is Rust?
 It is programming langugage, used to build Nextjs apps. Next core engine is written in Rust only.

Next.js Compiler:
..................
 Next js Compiler is written using RUST Using SWC (Speedy Web Compiler).

SWC allows next js to transform and minify the js code for production. This replaces babel.

SWC is 17x faster than Babel, it is embeded inside next js
...........................................................................................

....................................................................................
		NEXT JS Getting Started
.....................................................................................

How to install next js and how to create app?

System Req:

1.Node.js 16.8 or later
2.OS - any os
3.vs code.

How to create next js project?

G:\IBM\2024\March\Nextjs>npx create-next-app@latest
Need to install the following packages:
create-next-app@14.1.1
√ What is your project named? ... welcome-app
√ Would you like to use TypeScript? ... No / Yes
√ Would you like to use ESLint? ... No / Yes
√ Would you like to use Tailwind CSS? ... No / Yes
√ Would you like to use `src/` directory? ... No / Yes
√ Would you like to use App Router? (recommended) ... No / Yes
√ Would you like to customize the default import alias (@/*)? ... No / Yes
√ What import alias would you like configured? ... @/*
Creating a new Next.js app in G:\IBM\2024\March\Nextjs\welcome-app.

Using npm.

Initializing project with template: app-tw


Installing dependencies:
- react
- react-dom
- next

Installing devDependencies:
- autoprefixer
- postcss
- tailwindcss


added 137 packages, and audited 138 packages in 27s

34 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
Success! Created welcome-app at G:\IBM\2024\March\Nextjs\welcome-app


G:\IBM\2024\March\Nextjs>cd welcome-app

G:\IBM\2024\March\Nextjs\welcome-app>


Lanuch VS code:

G:\IBM\2024\March\Nextjs\welcome-app>code .
..............................................................................................
			 Lets Explore the Project Structure
..............................................................................................
package.json
{
  "name": "welcome-app",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "react": "^18",
    "react-dom": "^18",
    "next": "14.1.1"
  },
  "devDependencies": {
    "autoprefixer": "^10.0.1",
    "postcss": "^8",
    "tailwindcss": "^3.3.0"
  }
}


Scripts:
 dev :  Runs next js dev to start next.js app in development mode
 build : runs next build to build the app for production usage
 start: runs next start to start next app in production mode
 lint: runs next lint to  verify the app's code correct ness.


next.config.mjs
/** @type {import('next').NextConfig} */
const nextConfig = {};

export default nextConfig;

 This files contains app configurations...

what is mjs?
    if you want to run "es 6  module" code on node js, which is not allowed by default.

if you want to run es 6 module code(export,import,export default)

Solution:
1.you have to convert es6 module code into commonjs , so that node can understand
2.you have to configure package.json 
   "type:module"
3.you have to save file with "fileName.mjs" extension.

Compiler Config:
................
jsconfig.json
{
  "compilerOptions": {
    "paths": {
      "@/*": ["./src/*"]
    }
  }
}

tailwind css configuration:(css)

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      backgroundImage: {
        "gradient-radial": "radial-gradient(var(--tw-gradient-stops))",
        "gradient-conic":
          "conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))",
      },
    },
  },
  plugins: [],
};

postcss.config.js
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};
...........................

public
 Stores static assets such as images,fonts,documents
 public dir are accessed inside code using the base URL "/"

src/app
  This is where all application code will go..

There are some ready made files are there.

layout.js
page.js
global.css

Note:
 Which is similar to index.js and App.js in react.
.............................................................................................

Start Next app:

:\IBM\2024\March\Nextjs\welcome-app>npm run dev

> welcome-app@0.1.0 dev
> next dev

   ▲ Next.js 14.1.1
   - Local:        http://localhost:3000

Attention: Next.js now collects completely anonymous telemetry regarding usage.
This information is used to shape Next.js' roadmap and prioritize features.
You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:
https://nextjs.org/telemetry

 ✓ Ready in 2.8s
 ○ Compiling / ...
 ✓ Compiled / in 3.2s (511 modules)
 ✓ Compiled in 290ms (241 modules)
 ○ Compiling /favicon.ico ...
 ✓ Compiled /favicon.ico in 1439ms (518 modules)
.............................................................................................


